<asf xmlversion="1.0">
	<select-by-device id="common.services.basic.serial" caption="USART - Serial interface">
		<info type="keyword" value="technology">
			<keyword value="Communication"/>
		</info>
		<info type="description" value="summary">
		Common API which abstracts the user from directly accessing the register and provides a generic serial interface using USART.
		</info>
		<module type="service" id="common.services.basic.serial#0" caption="USART - Serial interface - XMEGA implementation">
			<info type="keyword" value="technology">
				<keyword value="Communication"/>
			</info>
			<info type="description" value="summary">
			Common API which abstracts the user from directly accessing the register and provides a generic serial interface using USART.
			</info>
			<build type="header-file" subtype="api" value="serial.h"/>
			<build type="header-file" value="xmega_usart/usart_serial.h"/>
			<build type="include-path" value="."/>
			<build type="include-path" value="xmega_usart"/>
			<build type="c-source" value="usart_serial.c"/>
			<build type="module-config" subtype="path" value="xmega_usart/module_config"/>
			<build type="module-config" subtype="required-header-file" value="conf_usart_serial.h"/>
			<build type="doxygen-entry-point" value="serial_group"/>
			<build type="doxygen-quick-start" value="serial_quickstart"/>
			<require idref="xmega.utils"/>
			<require idref="common.services.basic.clock"/>
			<require idref="xmega.drivers.usart"/>
			<device-support value="xmega"/>
			<generator value="doxygen-module" default-mcu="unspecified-xmegaa1"/>
		</module>
		<module type="service" id="common.services.basic.serial#1" caption="USART - Serial interface - UC3 implementation">
			<info type="keyword" value="technology">
				<keyword value="Communication"/>
			</info>
			<info type="description" value="summary">
			Common API which abstracts the user from directly accessing the register and provides a generic serial interface using USART.
			</info>
			<build type="c-source" value="usart_serial.c"/>
			<build type="header-file" subtype="api" value="serial.h"/>
			<build type="header-file" value="uc3_usart/usart_serial.h"/>
			<build type="include-path" value="."/>
			<build type="include-path" value="uc3_usart"/>
			<build type="module-config" subtype="path" value="uc3_usart/module_config"/>
			<build type="module-config" subtype="required-header-file" value="conf_usart_serial.h"/>
			<build type="doxygen-entry-point" value="serial_group"/>
			<build type="doxygen-quick-start" value="serial_quickstart"/>
			<require idref="avr32.utils"/>
			<require idref="common.services.basic.clock"/>
			<require idref="avr32.drivers.usart"/>
			<device-support value="uc3"/>
			<generator value="doxygen-module" default-mcu="unspecified-uc3b"/>
		</module>
		<module type="service" id="common.services.basic.serial#2" caption="USART - Serial interface - SAM implementation for devices with both UART and USART">
			<info type="keyword" value="technology">
				<keyword value="Communication"/>
			</info>
			<info type="description" value="summary">
			Common API which abstracts the user from directly accessing the register and provides a generic serial interface using USART.
			</info>
			<build type="c-source" value="usart_serial.c"/>
			<build type="header-file" subtype="api" value="serial.h"/>
			<build type="header-file" value="sam_uart/uart_serial.h"/>
			<build type="include-path" value="."/>
			<build type="include-path" value="sam_uart"/>
			<build type="module-config" subtype="path" value="sam_uart/module_config"/>
			<build type="module-config" subtype="required-header-file" value="conf_uart_serial.h"/>
			<build type="doxygen-entry-point" value="serial_group"/>
			<build type="doxygen-quick-start" value="serial_quickstart"/>
			<require idref="sam.utils"/>
			<require idref="common.services.basic.clock"/>
			<require idref="sam.drivers.uart"/>
			<require idref="sam.drivers.usart"/>
			<device-support value="sam3"/>
			<device-support value="sam4s"/>
			<device-support value="sam4e"/>
			<device-support value="sam4n"/>
			<device-support value="sam4c"/>
			<device-support value="sam4cm"/>
			<device-support value="sam4cp"/>
			<device-support value="samg51"/>
			<device-support value="samg53"/>
			<device-support value="samg54"/>
			<device-support value="samv71"/>
			<device-support value="samv70"/>
			<device-support value="sams70"/>
			<device-support value="same70"/>
			<generator value="doxygen-module" default-mcu="unspecified-sam3s"/>
		</module>
		<module type="service" id="common.services.basic.serial#3" caption="USART - Serial interface - SAM implementation for devices with only USART">
			<info type="keyword" value="technology">
				<keyword value="Communication"/>
			</info>
			<info type="description" value="summary">
			Common API which abstracts the user from directly accessing the register and provides a generic serial interface using USART.
			</info>
			<build type="c-source" value="usart_serial.c"/>
			<build type="header-file" subtype="api" value="serial.h"/>
			<build type="header-file" value="sam_uart/uart_serial.h"/>
			<build type="include-path" value="."/>
			<build type="include-path" value="sam_uart"/>
			<build type="module-config" subtype="path" value="sam_uart/module_config"/>
			<build type="module-config" subtype="required-header-file" value="conf_uart_serial.h"/>
			<build type="doxygen-entry-point" value="serial_group"/>
			<build type="doxygen-quick-start" value="serial_quickstart"/>
			<require idref="sam.utils"/>
			<require idref="common.services.basic.clock"/>
			<require idref="sam.drivers.flexcom"/>
			<require idref="sam.drivers.usart"/>
			<device-support value="samg55"/>
			<generator value="doxygen-module" default-mcu="unspecified-samg55"/>
		</module>
		<module type="service" id="common.services.basic.serial#4" caption="USART - Serial interface- SAM implementation for devices with only USART">
			<info type="keyword" value="technology">
				<keyword value="Communication"/>
			</info>
			<info type="description" value="summary">
			Common API which abstracts the user from directly accessing the register and provides a generic serial interface using USART.
			</info>
			<build type="c-source" value="usart_serial.c"/>
			<build type="header-file" subtype="api" value="serial.h"/>
			<build type="header-file" value="sam_uart/uart_serial.h"/>
			<build type="include-path" value="."/>
			<build type="include-path" value="sam_uart"/>
			<build type="module-config" subtype="path" value="sam_uart/module_config"/>
			<build type="module-config" subtype="required-header-file" value="conf_uart_serial.h"/>
			<build type="doxygen-entry-point" value="serial_group"/>
			<build type="doxygen-quick-start" value="serial_quickstart"/>
			<require idref="sam.utils"/>
			<require idref="common.services.basic.clock"/>
			<require idref="sam.drivers.usart"/>
			<device-support value="sam4l"/>
			<generator value="doxygen-module" default-mcu="unspecified-sam4l"/>
		</module>
		<module type="service" id="common.services.basic.serial#5" caption="USART - Serial interface - MEGARF implementation">
			<info type="keyword" value="technology">
				<keyword value="Communication"/>
			</info>
			<info type="description" value="summary">
			Common API which abstracts the user from directly accessing the register and provides a generic serial interface using USART.
			</info>
			<build type="header-file" subtype="api" value="serial.h"/>
			<build type="header-file" value="megarf_usart/usart_serial.h"/>
			<build type="include-path" value="."/>
			<build type="include-path" value="megarf_usart"/>
			<build type="c-source" value="usart_serial.c"/>
			<build type="module-config" subtype="path" value="megarf_usart/module_config"/>
			<build type="module-config" subtype="required-header-file" value="conf_usart_serial.h"/>
			<build type="doxygen-entry-point" value="serial_group"/>
			<build type="doxygen-quick-start" value="serial_quickstart"/>
			<require idref="mega.utils"/>
			<require idref="common.services.basic.clock"/>
			<require idref="mega.drivers.usart"/>
			<device-support value="megarf"/>
			<generator value="doxygen-module" default-mcu="unspecified-megarf"/>
		</module>
		<module type="service" id="common.services.basic.serial#6" caption="USART - Serial interface- SAM implementation for devices with only USART">
			<info type="keyword" value="technology">
				<keyword value="Communication"/>
			</info>
			<info type="description" value="summary">
			Common API which abstracts the user from directly accessing the register and provides a generic serial interface using USART.
			</info>
			<build type="include-path" value="."/>
			<build type="header-file" subtype="api" value="serial.h"/>
			<build type="header-file" value="sam0_usart/usart_serial.h"/>
			<build type="doxygen-entry-point" value="serial_group"/>
			<build type="doxygen-quick-start" value="serial_quickstart"/>
			<require idref="sam0.utils"/>
			<require idref="sam0.drivers.sercom.usart"/>
			<device-support value="sam0"/>
			<generator value="doxygen-module" default-mcu="unspecified-samd20"/>
		</module>
		<module type="service" id="common.services.basic.serial#7" caption="USART - Serial interface- SAM B implementation for devices with only UART">
			<info type="keyword" value="technology">
				<keyword value="Communication"/>
			</info>
			<info type="description" value="summary">
			Common API which abstracts the user from directly accessing the register and provides a generic serial interface using UART.
			</info>
			<build type="include-path" value="."/>
			<build type="header-file" subtype="api" value="serial.h"/>
			<build type="header-file" value="samb_uart/uart_serial.h"/>
			<build type="doxygen-entry-point" value="serial_group"/>
			<build type="doxygen-quick-start" value="serial_quickstart"/>
			<require idref="sam0.utils"/>
			<require idref="sam0.drivers.uart"/>
			<device-support value="samb"/>
		</module>
	</select-by-device>
</asf>
